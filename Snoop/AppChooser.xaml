<!--
(c) Copyright Cory Plotts.
This source is subject to the Microsoft Public License (Ms-PL).
Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
All other rights reserved.
-->
<Window
    x:Class="Snoop.AppChooser"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Snoop.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:infrastructure="clr-namespace:Snoop.Infrastructure"
    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:my="clr-namespace:Snoop"
    Width="612.5"
    Height="27.5"
    MinHeight="26"
    mc:Ignorable="d"
    AllowsTransparency="True"
    Background="{x:Null}"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    Foreground="{x:Null}"
    MouseLeftButtonDown="HandleMouseLeftButtonDown"
    ResizeMode="NoResize"
    SizeToContent="Width"
    SnapsToDevicePixels="False"
    Style="{DynamicResource windowStyle}"
    Title="Snoop"
    Topmost="True"
    WindowStyle="None">

    <!--<Window.Resources>
        --><!-- mouseOverBackgroundBrush --><!--
        <RadialGradientBrush x:Key="mouseOverBackgroundBrush">
            <GradientStop Offset="0.439" Color="#FFE3E5F0" />
            <GradientStop Offset="1" Color="#FFB2E3FF" />
        </RadialGradientBrush>
        --><!-- glassyGradientBrush --><!--
        <LinearGradientBrush x:Key="glassyGradientBrush" StartPoint="0.75,0.933" EndPoint="0.25,0.067">
            <GradientStop Offset="0" Color="#FF329CA5" />
            <GradientStop Offset="1" Color="#FFAEF2FA" />
        </LinearGradientBrush>
        --><!-- blueSteelGradientBrush --><!--
        <LinearGradientBrush x:Key="blueSteelGradientBrush" StartPoint="0.501,1.007" EndPoint="0.501,-0.007">
            <GradientStop Offset="0.787" Color="#FF0B9FF2" />
            <GradientStop Offset="0" Color="#FF007674" />
            <GradientStop Offset="0.257" Color="#FF004468" />
            <GradientStop Offset="0.251" Color="#FF004970" />
            <GradientStop Offset="0.421" Color="#FF014F79" />
            <GradientStop Offset="1" Color="#FF036194" />
        </LinearGradientBrush>
        --><!-- checkBoxStyle --><!--
        <Style x:Key="checkBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
            <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        --><!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content --><!--
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="13" Height="13">
                                    <Border
                                        x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                    <Path
                                        x:Name="CheckMark"
                                        Data="M 3 3 L 10 10 M 3 10 L 10 3"
                                        SnapsToDevicePixels="False"
                                        Stroke="{DynamicResource GlyphBrush}"
                                        StrokeThickness="2" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </BulletDecorator>
                        --><!-- This uses Visibility to hide and show the CheckMark on IsChecked --><!--
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MouseOverBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        --><!-- windowStyle (that makes the app chooser look selected/activated) --><!--
        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter />
                    </AdornerDecorator>
                    <ResizeGrip
                        x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        IsTabStop="false"
                        Visibility="Collapsed" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                        <Condition Property="WindowState" Value="Normal" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
       
     
    </Window.Resources>-->

    <StackPanel
        x:Name="grid"
        Background="Blue"
        Orientation="Horizontal">
        <TextBlock
            Width="131"
            Height="Auto"
            VerticalAlignment="Center"
            FontSize="18"
            FontWeight="Normal"
            Foreground="#B2FFFFFF"
            IsEnabled="True"
            Opacity="0.745"
            Text="HeartBeat"
            TextAlignment="Center" />
        <my:WindowFinder VerticalAlignment="Center"
            Margin="2,0,0,0"
            ToolTip="Drag and drop this crosshairs over a WPF window in order to Snoop it."
            WindowFinderType="Snoop" />
        <Button
            x:Name="closeButton"
            Grid.Column="6"
            Grid.ColumnSpan="2"
            Margin="2,3,4,3"
            Command="{x:Static input:ApplicationCommands.Close}"
            Style="{DynamicResource appChooserMinimizeCloseButtonStyle}"
            ToolTip="Close the Snoop Application Chooser.">
            <Grid>
                <Path
                    Canvas.Left="4"
                    Canvas.Top="4"
                    Margin="2"
                    Data="M18.33996,8.7972167 L1.8622991,25.274878"
                    Stretch="Fill"
                    Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                    StrokeThickness="3" />
                <Path
                    Canvas.Left="4"
                    Canvas.Top="4"
                    Margin="2"
                    Data="M19.831014,18.751491 L4.5959764,3.5164535"
                    Stretch="Fill"
                    Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                    StrokeThickness="3" />
            </Grid>
        </Button>
    </StackPanel>

</Window>
